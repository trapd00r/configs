shopt -s autocd
shopt -s cdable_vars
#shopt -s checkhash
shopt -u checkhash
shopt -s checkjobs
shopt -s checkwinsize
#shopt -s dirspell
shopt -s dotglob
shopt -s execfail
shopt -s extglob
shopt -s failglob
shopt -s globstar
#shopt -s gnu_errfmt
shopt -s histappend
shopt -s histreedit
#shopt -s histverify
shopt -s huponexit
shopt -s lastpipe
shopt -s lithist
#shopt -s login_shell
shopt -s nocaseglob
shopt -s nocasematch
shopt -s nullglob
shopt -s shift_verbose
shopt -s xpg_echo

#shopt -s restricted_shell
shopt -u mailwarn
shopt -u no_empty_cmd_completion


#export CDPATH=".:~:/usr"
#export COMP_KEY='TAB'
#export COMP_KEY='TAB'
#export POSIXLY_CORRECT=1
#export PROMPT_COMMAND='date'
#export COMP_WORDBREAKS='/_-'
export INPUTRC=${HOME}/etc/inputrc

for lc in LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE  LC_MONETARY     \
          LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT \
          LC_IDENTIFICATION LANG; do
  export "${lc}"='en_US.UTF-8'
done

#alias cd='cd -PL'
alias :q='exit'
alias ls='ls++'
alias ..='cd ..'
alias ss='source ~/.bashrc'
#PROMPT_COMMAND='↦ '
PS1="\e[33;3m↦\e[m\e[38;5;244m "

#  perlbrew##+
#if [[ -f $HOME/.perlbrew/init ]]; then
#  source $HOME/.perlbrew/init
#fi
#
#short_option=""
#
#__perlbrew_reinit () {
#  if [[ ! -d $HOME/.perlbrew ]]; then
#    mkdir -p $HOME/.perlbrew
#  fi
#
#  echo '# DO NOT EDIT THIS FILE' > $HOME/.perlbrew/init
#  command perlbrew $short_option env $1 >> $HOME/.perlbrew/init
#  source $HOME/.perlbrew/init
#  __perlbrew_set_path
#}
#
#__perlbrew_set_path () {
#  [[ -z "$PERLBREW_ROOT" ]] && return 1
#  hash -d perl 2>/dev/null
#  export PATH_WITHOUT_PERLBREW=$(perl -e 'print join ":", grep { index($_, $ENV{PERLBREW_ROOT}) } split/:/,$ENV{PATH};')
#  export PATH=$PERLBREW_PATH:$PATH_WITHOUT_PERLBREW
#}
#__perlbrew_set_path
#
#perlbrew () {
#  local exit_status
#  export SHELL
#
#  if [[ `echo $1 | awk 'BEGIN{FS=""}{print $1}'` = '-' ]]; then
#    short_option=$1
#    shift
#  fi
#
#  case $1 in
#    (use)
#      if [[ -z "$2" ]] ; then
#        if [[ -z "$PERLBREW_PERL" ]] ; then
#          echo "No version in use; defaulting to system"
#        else
#          echo "Using $PERLBREW_PERL version"
#        fi
#      elif [[ -x "$PERLBREW_ROOT/perls/$2/bin/perl" || "$2" = "system" ]]; then
#        unset PERLBREW_PERL
#        eval $(command perlbrew $short_option env $2)
#        __perlbrew_set_path
#      else
#        echo "$2 is not installed" >&2
#        exit_status=1
#      fi
#      ;;
#
#    (switch)
#      command perlbrew $short_option $*
#      exit_status=$?
#
#      if [[ -n "$2" ]] ; then
#        __perlbrew_reinit
#      fi
#      ;;
#
#    (off)
#      unset PERLBREW_PERL
#      command perlbrew $short_option off
#
#      __perlbrew_reinit
#      ;;
#
#    (*)
#      command perlbrew $short_option $*
#      exit_status=$?
#      ;;
#  esac
#  hash -r
#  return ${exit_status:-0}
#}
###-

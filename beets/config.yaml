# vim:synmaxcol=500:expandtab:fdm=marker:fdl=0:ft=perl:
#      ${HOME}/etc/beets/config.yaml
#   ‗‗‗‗‗‗‗‗‗‗‗‗ ‗‗‗‗‗‗ ‗‗‗‗‗‗‗‗ ‗‗‗‗‗‗‗‗‗‗‗
#         owner  Magnus Woldrich <m@japh.se>
#         btime  2021-05-13 10:31:39
#         mtime  2021-07-08 21:32:35
#   permissions  You are free to use things you may find useful here.
#                Please improve and share.
#           git  http://github.com/trapd00r/configs/  (up-to-date)
#           url  http://japh.se
#           irc  japh@irc.libera.chat #vim #perl #beets
#   ‗‗‗‗‗‗‗‗‗‗‗‗ ‗‗‗‗‗‗‗‗‗‗‗‗‗ ‗‗‗‗ ‗‗‗‗ ‗‗‗‗

#< what does it look like
## Alanis Morissette │2020│ Reckoning [Single, WEB, MP3]
## Alanis Morissette │2020│ Such Pretty Forks in the Road [WEB, FLAC]
## Anna Ternheim │2003│ My Secret [EP, CD, MP3]
## Anna Ternheim │2004│ Somebody Outside [CD, MP3]
## Anna Ternheim │2005│ Shoreline EP [EP, CD, MP3]
##  ├── 01 Shoreline (Radio Version).mp3
##  ├── 02 Little Lies.mp3
##  ├── 03 China Girl.mp3
##  ├── 04 When Tomorrow Comes.mp3
##  ├── 05 Anywhere I Lay My Head.mp3
##  └── cover.jpg

## A/Anna Ternheim/Anna Ternheim │2003│ My Secret [EP, CD, MP3]
#   '- 01 My Secret.mp3
#   '- 02 All for Me.mp3
#   '- 03 A Voice to Calm You Down.mp3
#   '- 04 I Say No (Gotland Version).mp3
#   '- 05 Wedding Song (Demo Version).mp3
#   '- cover.jpg
#>
#< options->core
directory:  '/mnt/music8/+TAGGED'
library:    '~/var/beets/beets202105.db'
pluginpath: ['/usr/lib/python3.9/site-packages/beetsplug/',
             '/home/scp1/dev/beets-titlecase_proper',
            ]


# files matching these patterns are deleted from source after import
clutter: ["Thumbs.DB", ".DS_Store", "*.m3u", ".pls",
          "*.jpg", "*.nfo", ".txt", "*.log", ".gif",
         ]

replace:
    '[\\]':         ''
    '[_]':          '-'
    '[/]':          '-'
    '^\.':          ''
    '[\x00-\x1f]':  ''
    '[<>:"\?\*\|]': ''
    '\.$':          ''
    '\s+$':         ''
    '^\s+':         ''
    '^-':           ''
    '’':            "'"
    '′':            "'"
    '″':            ''


# I wish this didn't asciify explicit unicode characters, i.e │
#asciify_paths:         yes

art_filename:          cover # cover.jpg
format_album:          $path
format_item:           $path
ignore:                ['.*', '*~', 'System Volume Information']
ignore_hidden:         yes
per_disc_numbering:    false
sort_album:            path+
sort_item:             path+
sort_case_insensitive: yes
threaded:              yes
timeout:               5.0
verbose:               no
va_name:               'Various Artists'
#>
#< options->importer
import:
  languages:        en
  default_action:   apply

#  remove causes a crash: https://github.com/beetbox/beets/issues/716
  duplicate_action: keep

  non_rec_action:   ask
  autotag:          yes
  write:            yes
  copy:             no
  link:             no
  move:             yes
#  quiet_fallback:   asis # when using the -q flag
  quiet_fallback:   skip # when using the -q flag

  # Either yes or no, controlling whether imported directories are recorded
  # and whether these recorded directories are skipped. This corresponds to
  # the -i flag to beet import.
  incremental:      yes
#>
#< options->plugin
#plugins: [
#  'fetchart',   'discogs',  'fromfilename', 'inline',     'smartplaylist',
#  'ftintitle',  'info',     'lastgenre',    'lastimport', 'thumbnails',
#  'mpdupdate',  'mpdstats', 'rewrite',      'duplicates', 'missing',
#  'extrafiles', 'edit',     'lyrics',       'mpdqueue',
#]

plugins: [
  'bucket',
  'discogs',
  'edit',
  'fetchart',
  'fromfilename',
  'ftintitle',
  'info',
  'inline',
  'lastgenre',
  'lastimport',
  'rewrite',
  'smartplaylist',
  'titlecase_proper', # https://github.com/trapd00r/beets-titlecase_proper
]

discogs:
  source_weight: 0.0

bucket:
  bucket_alpha:
  - '#-!'
  - '0-9'
  - 'A'
  - 'B'
  - 'C'
  - 'D'
  - 'E'
  - 'F'
  - 'G'
  - 'H'
  - 'I'
  - 'J'
  - 'K'
  - 'L'
  - 'M'
  - 'N'
  - 'O'
  - 'P'
  - 'Q'
  - 'R'
  - 'S'
  - 'T'
  - 'U'
  - 'V'
  - 'W'
  - 'X'
  - 'Y'
  - 'Z'
  bucket_alpha_regex:
    '#-!': ^[^0-9a-zA-ZåÅäÄöÖ]
  bucket_year: []
  extrapolate: no

edit:
  itemfields:  track title artist album year
  albumfields: track title artist albumartist album year

embedart:
  auto: yes

fetchart:
  auto:    yes
  sources: coverart itunes amazon albumart wikipedia google

ftintitle:
  auto: yes

lastfm:
  user: betbot

lastgenre:
  auto:      yes
  canonical: yes
  force:     no
  source:    artist

lyrics:
  auto: yes

mpd:
  host: localhost
  port: 6600

rewrite:
  album .*Sommar i P1:               P1 Sommar
  album .*Sommar och Vinter i P1.*:  P1 Sommar
  album Söndagsintervjun:            P1 Söndagsintervjun
  album .*Musikguiden i p3:          P3 Musikguiden
  album Jukeboxen i p4:              P4 Jukeboxen
  album Musikspecial i p4:           P4 Musikspecial

  artist Melanie B[.]?:              Melanie Brown
  artist Far & Son:                  Far och Son
  artist Smith & Tell:               Smith and Tell
  artist MBMA:                       Mobbade Barn med Automatvapen
  artist DPZ:                        Dead Prez
  artist Snoop Dogg.*:               Snoop Dogg
  artist Pst.q:                      Pst-q
  artist 10,000 Maniacs:             10000 Maniacs
  artist Fronda.*:                   Fronda
  artist Magnus Rytterstam.*:        Magnus Rytterstam
  artist 江海迦:                     Aga
  artist Whoo Kid:                   DJ Whoo Kid
  artist Looptroop.*:                Looptroop
  artist T[.]R:                      Öris
  artist Smuts & Co:                 Organism 12
  artist Organismen:                 Organism 12
  artist Retarderat Eleverade:       Organism 12
  artist Ungdumshälsan:              Organism 12
  artist Gms.*:                      GMS
  artist (tupac|2[pP]ac).*:          2pac
  artist .*weird Al.*:               Weird Al Yankovic
  artist .*Green Lantern.*:          DJ Green Lantern
  artist .ingenting.:                Ingenting
  artist Sin[eé]ad O.Connor.*:       Sinéad O'Connor #'
  artist .*Suzanne.*Vega:            Suzanne Vega
  artist .*1[23]00 mic.*:            1200 Micrograms
  artist elin (ruth)? sigvardsson:   Elin Sigvardsson
  artist elin ruth:                  Elin Sigvardsson
  artist ^Game$:                     The Game
  artist ^Ken$:                      Ken Ring
  artist Special D:                  Special D.
  artist Danne W.*:                  Sjätte Sinnet
  artist Sjatte Sinnet:              Sjätte Sinnet
  artist Ante Barazza:               Sjätte Sinnet

smartplaylist:
  auto:         no
  playlist_dir: '~/mp3/_playlists'
  playlists:
    - name:  '+all.m3u'
      query: ''

    - name:  'eminem.m3u'
      query: 'artist:Eminem'

    - name:  '$year.m3u'
      query: 'year::(199[0-9]|200[0-9]|201[0-9])'

    - name:  '+decent.m3u'
      query: 'play_count:1..'

    - name:  '+wow.m3u'
      query: 'play_count:5..'

    - name:  'psychedelic'
      query: 'genre:psychedelic'

    - name:  'loved.m3u'
      query: 'loved:1'
#>
#< path setup
aunique:
  disambuguators: media mastering label catalognum albumdisambig releasegroupdisambig

match:
  preferred:
    media: ['CD', 'Digital Media|File', 'Vinyl']

# TODO split path setups up with literal \
paths:
#    mb_trackid::^$:              +unmatched/
    label:"Masters of Hardcore": M/Masters of Hardcore/$moh_catalog %if{$hasyear,${year}} %titlecase_proper{$album}/${padded_tracknr} %titlecase_proper{$artist} - %titlecase_proper{$title}

#   +game/+8bitpeoples/The Gameboy Singles 2002 [Nullsleep] (2002)
    tag:8bitpeoples:     +game/+8bitpeoples/%titlecase_proper{$album} [$first_artist]%if{$hasyear, (${year})}/${padded_tracknr} $artist - %titlecase_proper{$title}

#< Eminem
#   import bootlegs that have no discog info as-is in +other
#    tag:eminem: E/Eminem/+other/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}

#   +skits/1999 Eminem - I Kissed a Boy (Skit).mp3
    singleton:true tag:eminem-skits:             E/Eminem/+skits/%if{$hasyear, $year} %titlecase_proper{$artist} - %titlecase_proper{$title}

#   +disses/+tracks/Benzino - Don't Wanna (eminem Diss).mp3
    singleton:true tag:eminem-diss:             E/Eminem/+disses/+tracks/%if{$hasyear, $year} %titlecase_proper{$artist} - %titlecase_proper{$title}

#   +disses/Esham │2003│ Boom (D-12 Diss) Promo CDS [MP3]
    singleton:false tag:eminem-diss:            E/Eminem/+disses/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}

#   +freestyles/1999 Eminem - Mancow (freestyle).mp3
    singleton:true tag:eminem-freestyles: E/Eminem/+freestyles/%if{$hasyear, $year} %titlecase_proper{$artist} - %titlecase_proper{$title}

# Re-import with:
# $ beet import -A --set tag=eminem
# and everything gets placed  where it belong
#
# The reason why I am doing like this is because I want various Eminem-related
# things to go in the main Eminem directory/+albumtype, regardless of
# albumartist

    tag:eminem albumtype:single:      E/Eminem/+singles/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
    tag:eminem albumtype:album:       E/Eminem/+lp/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
    tag:eminem albumtype:ep:          E/Eminem/+ep/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
    tag:eminem albumtype:promo:       E/Eminem/+promo/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
    tag:eminem albumtype:bootleg:     E/Eminem/+bootleg/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
    tag:eminem albumtype:unofficial:  E/Eminem/+bootleg/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}

    tag:eminem albumtype:mixtape:     E/Eminem/+mixtape/%titlecase_proper{$mixtape_album} [%titlecase_proper{$first_artist}]%if{$hasyear, (${year})}/${padded_tracknr} %titlecase_proper{$artist} - %titlecase_proper{$title}

    tag:eminem albumtype:live:        E/Eminem/+live/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
    tag:eminem albumtype:demo:        E/Eminem/+demo/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
    tag:eminem albumtype:remix:       E/Eminem/+remix/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
    tag:eminem albumtype:soundtrack:  E/Eminem/+soundtrack/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
    tag:eminem albumtype:interview:   E/Eminem/+interview/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
    tag:eminem albumtype:compilation: E/Eminem/+compilation/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
    tag:eminem albumtype:whitelabel:  E/Eminem/+whitelabel/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
    tag:eminem albumtype:other:       E/Eminem/+other/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}

# Various singleton tracks that should go in the Eminem base dir
# $ beet import -sA --set tag=eminem *(.)
    tag:eminem singleton:true:        E/Eminem/+tracks/%if{$hasyear, $year} %titlecase_proper{$artist} - %titlecase_proper{$title}

#   albums with no albumtype as of yet
    albumartist:eminem:               E/Eminem/+other/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$media_type$format]/${padded_tracknr} %titlecase_proper{$title}

#   import bootlegs that have no discog info as-is in +other for later sorting
    tag:eminem:                       E/Eminem/+other/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}

# TODO: Perhaps better to just use the eminem tag?
#    albumartist::"(D12|Kuniva|Swifty Mc[vV]ay|Proof|Big Proof|Funky Cowboys|Bizarre|Promatic|Bugz|Kon Artis|Fuzz Scoota|^Fuzz$|L[.]A[.]R[.]S)" albumtype:single:      E/Eminem/00-d12/+singles/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
#    albumartist::"(D12|Kuniva|Swifty Mc[vV]ay|Proof|Big Proof|Funky Cowboys|Bizarre|Promatic|Bugz|Kon Artis|Fuzz Scoota|^Fuzz$|L[.]A[.]R[.]S)" albumtype:album:       E/Eminem/00-d12/+lp/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
#    albumartist::"(D12|Kuniva|Swifty Mc[vV]ay|Proof|Big Proof|Funky Cowboys|Bizarre|Promatic|Bugz|Kon Artis|Fuzz Scoota|^Fuzz$|L[.]A[.]R[.]S)" albumtype:ep:          E/Eminem/00-d12/+ep/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
#    albumartist::"(D12|Kuniva|Swifty Mc[vV]ay|Proof|Big Proof|Funky Cowboys|Bizarre|Promatic|Bugz|Kon Artis|Fuzz Scoota|^Fuzz$|L[.]A[.]R[.]S)" albumtype:promo:       E/Eminem/00-d12/+promo/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
#    albumartist::"(D12|Kuniva|Swifty Mc[vV]ay|Proof|Big Proof|Funky Cowboys|Bizarre|Promatic|Bugz|Kon Artis|Fuzz Scoota|^Fuzz$|L[.]A[.]R[.]S)" albumtype:bootleg:     E/Eminem/00-d12/+bootleg/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
#    albumartist::"(D12|Kuniva|Swifty Mc[vV]ay|Proof|Big Proof|Funky Cowboys|Bizarre|Promatic|Bugz|Kon Artis|Fuzz Scoota|^Fuzz$|L[.]A[.]R[.]S)" albumtype:unofficial:  E/Eminem/00-d12/+bootleg/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
#    albumartist::"(D12|Kuniva|Swifty Mc[vV]ay|Proof|Big Proof|Funky Cowboys|Bizarre|Promatic|Bugz|Kon Artis|Fuzz Scoota|^Fuzz$|L[.]A[.]R[.]S)" albumtype:mixtape:     E/Eminem/00-d12/+mixtape/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
#    albumartist::"(D12|Kuniva|Swifty Mc[vV]ay|Proof|Big Proof|Funky Cowboys|Bizarre|Promatic|Bugz|Kon Artis|Fuzz Scoota|^Fuzz$|L[.]A[.]R[.]S)" albumtype:live:        E/Eminem/00-d12/+live/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
#    albumartist::"(D12|Kuniva|Swifty Mc[vV]ay|Proof|Big Proof|Funky Cowboys|Bizarre|Promatic|Bugz|Kon Artis|Fuzz Scoota|^Fuzz$|L[.]A[.]R[.]S)" albumtype:demo:        E/Eminem/00-d12/+demo/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
#    albumartist::"(D12|Kuniva|Swifty Mc[vV]ay|Proof|Big Proof|Funky Cowboys|Bizarre|Promatic|Bugz|Kon Artis|Fuzz Scoota|^Fuzz$|L[.]A[.]R[.]S)" albumtype:remix:       E/Eminem/00-d12/+remix/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
#    albumartist::"(D12|Kuniva|Swifty Mc[vV]ay|Proof|Big Proof|Funky Cowboys|Bizarre|Promatic|Bugz|Kon Artis|Fuzz Scoota|^Fuzz$|L[.]A[.]R[.]S)" albumtype:soundtrack:  E/Eminem/00-d12/+soundtrack/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
#    albumartist::"(D12|Kuniva|Swifty Mc[vV]ay|Proof|Big Proof|Funky Cowboys|Bizarre|Promatic|Bugz|Kon Artis|Fuzz Scoota|^Fuzz$|L[.]A[.]R[.]S)" albumtype:interview:   E/Eminem/00-d12/+interview/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
#    albumartist::"(D12|Kuniva|Swifty Mc[vV]ay|Proof|Big Proof|Funky Cowboys|Bizarre|Promatic|Bugz|Kon Artis|Fuzz Scoota|^Fuzz$|L[.]A[.]R[.]S)" albumtype:compilation: E/Eminem/00-d12/+compilation/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
#    albumartist::"(D12|Kuniva|Swifty Mc[vV]ay|Proof|Big Proof|Funky Cowboys|Bizarre|Promatic|Bugz|Kon Artis|Fuzz Scoota|^Fuzz$|L[.]A[.]R[.]S)" albumtype:other:       E/Eminem/00-d12/+other/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
#    albumartist::"(D12|Kuniva|Swifty Mc[vV]ay|Proof|Big Proof|Funky Cowboys|Bizarre|Promatic|Bugz|Kon Artis|Fuzz Scoota|^Fuzz$|L[.]A[.]R[.]S)":                       E/Eminem/00-d12/+other/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
#    artist::"(D12|Kuniva|Swifty Mc[vV]ay|Proof|Big Proof|Funky Cowboys|Bizarre|Promatic|Bugz|Kon Artis|Fuzz Scoota|^Fuzz$|L[.]A[.]R[.]S)" singleton:true:             E/Eminem/00-d12/+tracks/%if{$hasyear, $year} %titlecase_proper{$artist} - %titlecase_proper{$title}
#>

#-- These will be hard to look up and it's ok to use the basename
    tag:whoa:                    +hiphop-swe/whoa.nu/$base_name
    tag:frizon:                  +hiphop-swe/frizon.info/$base_name
    tag:randombastards:          +hiphop-swe/randombastards/$base_name
    tag:streetfashion:           +hiphop-swe/streetfashion/$base_name
    tag:norrköping:              +hiphop-swe/Sjätte Sinnet/$base_name

    tag:ocremix:                 +game/+ocremix/$base_name
    tag:overlooked:              +game/+overlookedremix/$base_name
    tag:amigaremix:              +game/+amigaremix/$base_name
    tag:rosamannen:              +live/+rosamannen/$base_name
#--
    tag:sr:                      +radio/Sveriges Radio/%titlecase_proper{$album}/%titlecase_proper{$title}

#   +game/+ost/Spiderman and the X-Men Arcade's Revenge OST (1992)
    tag:gamesoundtrack:          +game/+ost/$album%if{$hasyear, (${year})}/${padded_tracknr} $artist - %titlecase_proper{$title}

#   +game/The Mighty Pirate Sessions Volume 1 [Dubmood] (2006)
    tag:game:                    +game/%titlecase_proper{$album} [$albumartist]%if{$hasyear, (${year})}/${padded_tracknr} $artist - %titlecase_proper{$title}



#   +mixtape/All Out War (G-Unot Mixtape) [The Game] (2005)
    tag:mixtape:           +mixtape/$mixtape_album [$first_artist]%if{$hasyear, (${year})}/${padded_tracknr} $artist - %titlecase_proper{$title}
    albumtype:mixtape:     +mixtape/$mixtape_album [$first_artist]%if{$hasyear, (${year})}/${padded_tracknr} $artist - %titlecase_proper{$title}

    albumtype:single:      %bucket{$first_artist, alpha}/%titlecase_proper{$first_artist}/+singles/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
    albumtype:album:       %bucket{$first_artist, alpha}/%titlecase_proper{$first_artist}/+lp/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
    albumtype:ep:          %bucket{$first_artist, alpha}/%titlecase_proper{$first_artist}/+ep/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
    albumtype:promo:       %bucket{$first_artist, alpha}/%titlecase_proper{$first_artist}/+promo/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
    albumtype:whitelabel:  %bucket{$first_artist, alpha}/%titlecase_proper{$first_artist}/+whitelabel/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
    albumtype:bootleg:     %bucket{$first_artist, alpha}/%titlecase_proper{$first_artist}/+bootleg/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
    albumtype:unofficial:  %bucket{$first_artist, alpha}/%titlecase_proper{$first_artist}/+bootleg/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}

#   +live/Joan Baez │1995│ Ring Them Bells [Live, CD, MP3]
    albumtype:live:        %bucket{$first_artist, alpha}/%titlecase_proper{$first_artist}/+live/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}

#   +demo/Electric Zoo │2012│ Demo [CD, FLAC]
    albumtype:demo:        %bucket{$first_artist, alpha}/%titlecase_proper{$first_artist}/+demo/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}

#   +remix/Eminem │2003│ Loose Mundin (Promo Vinyl) [Remix, MP3]
    albumtype:remix:       %bucket{$first_artist, alpha}/%titlecase_proper{$first_artist}/+remix/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}

    albumtype:interview:   %bucket{$first_artist, alpha}/%titlecase_proper{$first_artist}/+interview/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}

#   +other/Eminem │2012│ Crank Calls [MP3]
    albumtype:other:       %bucket{$first_artist, alpha}/%titlecase_proper{$first_artist}/+other/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}

#   +demo/1998 Eminem - Kim (Original).mp3
    singleton:true tag:demo:       %bucket{$first_artist_singleton, alpha}/%titlecase_proper{$first_artist_singleton}/+demo/%if{$hasyear, $year} %titlecase_proper{$artist} - %titlecase_proper{$title}

#   +live/+tracks/1999 Eminem - Brain Damage (Live at MTV Spring Break 2000).mp3
    singleton:true tag:live:       %bucket{$first_artist_singleton, alpha}/%titlecase_proper{$first_artist_singleton}/+live/+tracks/%if{$hasyear, $year} %titlecase_proper{$artist} - %titlecase_proper{$title}

#   +live/Dr. Dre │2010│ Live In Europe [CD, MP3]
    tag:live:                      %bucket{$first_artist, alpha}/%titlecase_proper{$first_artist, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}

#   +interview/2002 Eminem - Interview on Mojo in the Morning.mp3
    singleton:true tag:interview:  %bucket{$first_artist_singleton, alpha}/%titlecase_proper{$first_artist_singleton}/+interview/%if{$hasyear, $year} %titlecase_proper{$artist} - %titlecase_proper{$title}

#   +speechtone/2005 Eminem - Speechtone 2.mp3
    singleton:true tag:speechtone: %bucket{$first_artist_singleton, alpha}/%titlecase_proper{$first_artist_singleton}/+speechtone/%if{$hasyear, $year} %titlecase_proper{$artist} - %titlecase_proper{$title}

#   +freestyles/1997 Eminem - Elimination Freestyle.mp3
    singleton:true tag:freestyle:  %bucket{$first_artist_singleton, alpha}/%titlecase_proper{$first_artist_singleton}/+freestyles/%if{$hasyear, $year} %titlecase_proper{$artist} - %titlecase_proper{$title}

#   +tracks/1200 Micrograms - Live at Voloz (2016).mp3
    singleton:true:                %bucket{$first_artist_singleton, alpha}/%titlecase_proper{$first_artist_singleton}/+tracks/%if{$hasyear, $year} %titlecase_proper{$artist} - %titlecase_proper{$title}

### add compilations and soundtrack by artist in artist dir, and other VA
### compilations as a special case below.

#   Eminem/+soundtrack/
#    albumtype:soundtrack  ^albumartist:"Various Artists":  %bucket{$first_artist, alpha}/%titlecase_proper{$first_artist}/+soundtrack/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
#
#   +compilation/Eminem │2000│ Off The Wall [Compilation, CD, MP3]
    albumtype:compilation ^albumartist:"Various Artists":  %bucket{$first_artist, alpha}/%titlecase_proper{$first_artist}/+compilation/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}

#   +ost/│2003│2 Fast 2 Furious Soundtrack [CD, MP3]
    albumtype:soundtrack:        +ost/%if{$hasyear,${year} }%titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}

#   +VA/Raja Ram's Stash Bag, Volume 2 (2003)
    comp:                        +va/%titlecase_proper{$album}%if{$hasyear, (${year})}/${padded_tracknr} $artist - %titlecase_proper{$title}

#   Sophie Zelmani │1998│ Precious Burden [CD, FLAC]
    default:                     %bucket{$first_artist, alpha}/%titlecase_proper{$first_artist}/%titlecase_proper{$first_artist}%if{$hasyear, │${year}│} %titlecase_proper{$album} [$alb_type$media_type$format]/${padded_tracknr} %titlecase_proper{$title}
#>
#< inline fun!
item_fields:

# pad track number with zero if < 10
  padded_tracknr: "'{:02n}'.format(track)"

# remove spaces from catalognum
  moh_catalog: catalognum.replace(" ", "")

# capture first artist as primary artist to avoid directories like this:
# · B/Britney Spears/
# · B/Britney Spears feat Madonna/
# · B/Britney Spears vs Metallica/
# > https://github.com/beetbox/beets/issues/3176
# > https://www.japh.se/2021/06/01/capture-primary-artist-as-a-separate-field-in-beets.html
#
# handles:
# · Artist,
# · Artist &
# · Artist feat
# · Artist feat.
# · Artist featuring
# · Artist ft.
# · Artist vs
# · Artist vs.
# · Artist &
#
# The idea is to use $first_artist in the beginning of the path format
# like so:
#
# %titlecase_proper{$first_artist}/%titlecase_proper{$albumartist}
#
# which will put 'Jennifer Lopez feat. Pitbull' inside the main Jennifer
# Lopez directory, but still keep the feat. part in the directory name
# inside it.
#
# J/Jennifer Lopez Feat. Pitbull/Jennifer Lopez Feat. Pitbull │2012│ Dance Again [Single, WEB, MP3]/01 Dance Again.mp3
# -> J/Jennifer Lopez/Jennifer Lopez Feat. Pitbull │2012│ Dance Again [Single, WEB, MP3]/01 Dance Again.mp3


  first_artist: |
    import re
    return re.split(',|\s+(feat(.?|uring)|&|(Vs|Ft).)', albumartist, 1, flags=re.IGNORECASE)[0]

  first_artist_singleton: |
    import re
    return re.split(',|\s+(feat(.?|uring)|&|(Vs|Ft).)', artist, 1, flags=re.IGNORECASE)[0]

# file basename for singletons import - import as is, minus the extension.
  base_name: |
    import os.path
    base = os.path.basename(path)
    return os.path.splitext(base)[0]

album_fields:
  mixtape_album: |
    import re
    album_fixed = album
    return re.sub(r"G.unit Radio,?\s+(Pt|Part)[.]?\s*(.*)", r"G-Unit Radio \2", album_fixed, flags=re.IGNORECASE)

  alb_status: |
    # MB returns 4 values describing how "offical" a release is, they are:
    # Official, Promotional, Bootleg, and Pseudo-Release
    # We only note the middle two.
    # https://musicbrainz.org/doc/Release#Status
    if 'Promo' in albumstatus:
      return 'Promo, '
    elif 'Bootleg' in albumstatus:
      return 'Bootleg, '
    elif 'Official' in albumstatus:
      return 'Official, '
    elif 'Promotion' in albumstatus:
      return 'Promo, '
    else:
      return None

#  alb_type: |
#    if albumtype:
#      return albumtype + ', '
#    else:
#      return None

  alb_type: |
    alb_types = ""
    albumtypes_list = {
      'ep': 'EP',
      'lp': 'LP',
      'single': 'Single',
      'live': 'Live',
      'remix': 'Remix',
      'dj-mix': 'DJ-mix',
      'mixtape/street': 'Mixtape',
      'interview': 'Interview',
    }
    for key, value in albumtypes_list.items():
      if albumtype == key:
        alb_types += str(value)

      if alb_types is not None:
        if alb_types != '':
          return alb_types + ', '
      else:
        return None

  media_type: |
      # https://musicbrainz.org/doc/Release/Format
      # Lets Merge the variations of the same medium into the main
      # medium name (Opinonated)
      media_list = {
       '12" Vinyl':     'Vinyl, ',
       '10" Vinyl':     'Vinyl, ',
       '7" Vinyl':      'Vinyl, ',
       'Vinyl':         'Vinyl, ',
       'CDr':           'CDR, ',
       'CD-R':          'CDR, ',
       'Cassette':      'Cassette, ',
       'Digital Media': 'Web, ',
       'CD':            'CD, ',
       'File':          'Web, ',
       'DVD':           'DVDA, ',
      }
      # Lets omit these instead of converging them under a similar label like above (Opinonated)
      media_types_to_omit = ['Enhanced CD', 'CDDA', 'Blu-spec CD', 'HQCD', '']
      if items[0].media in media_list:
        return str(media_list[items[0].media])
      elif items[0].media in media_types_to_omit:
        return None
      else:
        return str(items[0].media)

  hasyear: 1 if year > 0 else 0
#>
#< autotagger
# To control how tolerant the autotagger is of differences, use the
# strong_rec_thresh option, which reflects the distance threshold below
# which beets will make a “strong recommendation” that the metadata
# be used.

# default is 0.04
match:
  strong_rec_thresh: 0.10
  medium_rec_thresh: 0.25
  ignored:           missing_tracks unmatched_tracks
  ignored_media:     ['Data CD', 'DVD', 'DVD-Video', 'Blu-ray', 'HD-DVD',
                      'VCD', 'SVCD', 'UMD', 'VHS']
#>
#< ui
ui:
  color: yes
  colors:
    text_success:         green
    text_warning:         yellow
    text_error:           red
    text_highlight:       blue
    text_highlight_minor: lightgray
    action_default:       turquoise
    action:               blue
#>

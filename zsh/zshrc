#!/bin/zsh
### vim: ft=sh:fdm=marker:et:sw=2:
###
#      ${HOME}/etc/zsh/zshrc
#   ‗‗‗‗‗‗‗‗‗‗‗‗ ‗‗‗‗‗‗ ‗‗‗‗‗‗‗‗ ‗‗‗‗‗‗‗‗‗‗‗
#         owner  Magnus Woldrich <m@japh.se>
#         btime  2009-04-24
#         mtime  2012-09-08 19:51:23
#   permissions  You are free to use things you may find useful here.
#                Would my tweaks happen to give you a raise or fetch you a
#                girlfriend, it goes without saying I'm counting on you
#                to share with me as I've shared with you.
#           git  http://github.com/trapd00r/configs/zsh  (up-to-date)
#           url  http://devel.japh.se/configs/zsh
#           irc  japh@freenode #zsh #vim #perl
#   ‗‗‗‗‗‗‗‗‗‗‗‗ ‗‗‗‗‗‗‗‗‗‗‗‗‗ ‗‗‗‗ ‗‗‗‗ ‗‗‗‗
###
###

#if [[  $UID -ne 0 ]]; then
#  umask 0077
#  fi

#FIXME
#~/dev/utils/font-10-anonymous-it
#~/dev/utils/font-12-terminus
#~/dev/utils/font-12-anonymous

if [[ $(hostname) = "sid" ]]; then
  ~/dev/utils/font-monte
elif [[ $(hostname) = "tp" ]]; then
  ~/dev/utils/font-askas
fi

fpath=($fpath ~/etc/zsh/functions/)
# load all functions in fpath that has the executable bit set; makes it easy to
# enable/disable things on the fly.
#for func in $^fpath/*(N-.x:t); autoload $func
#freload()  { while (( $# )); do; unfunction $1; autoload -U $1; shift; done }

#autoload -U compinit
#compinit

# command mode thanks
#zle-line-init() { zle -K vicmd }
#zle -N zle-line-init
#zle-line-finish() { print -P 'done\n' }

#command_not_found_handler() {
#  if autoload +X $1 >& /dev/null; then
#    $1 "${(@)argv[2,-1]}"
#  return 0
#  else
#    return 1
#  fi
#}

#PERIOD=5; periodic() { setbg }

#tv_shortcuts() {
#  if [[ $(pwd) == /mnt/TV_3* ]]; then
#    hash -d 4=/mnt/TV_4
#  fi
#}

if [[ -z $(pidof ssh-agent) && -z $(pidof gpg-agent) ]]; then
  if [[ -f /usr/bin/keychain && -f $HOME/.ssh/id_rsa_askas ]]; then
    eval `keychain --dir $HOME/.keychain -q --eval id_rsa_askas`
  fi
fi

if [[ $DEBUG > 0 ]]; then
  setopt source_trace
fi
#for r in $HOME/etc/zsh/[0-9]*.zsh; do
#  . $r
#done

for r in $HOME/etc/zsh/[0-5]*.zsh; do
  . $r
done
. $HOME/etc/zsh/10-syntax.zsh
. $HOME/etc/zsh/10-z.zsh
#. $HOME/etc/zsh/plugins/k.sh
#. $HOME/etc/zsh/plugins/zsh-vimode-visual.zsh
. $HOME/.secret_zshrc


#if [[ -n ${SSH_CLIENT} ]] ; then
#  RPROMPT="${Pfg[red]}"'['"${Pfg[cy]}%n${PNC}@${Pfg[cy]}%m${Pfg[red]}"']'"${Pfg[cy]}"
#fi

stty intr    "^C"          2> /dev/null
stty erase   "^?"          2> /dev/null
stty eof     "^D"          2> /dev/null
stty start   "undef"       2> /dev/null
stty stop    "undef"       2> /dev/null
stty susp    "^Z"          2> /dev/null
stty rprnt   "^R"          2> /dev/null
stty werase  "^W"          2> /dev/null
stty lnext   "^B"          2> /dev/null
stty flush   "undef"       2> /dev/null
#stty eol     "undef"       2> /dev/null
#stty eol2    "undef"       2> /dev/null
#stty swtch   "undef"       2> /dev/null
#stty kill    "undef"       2> /dev/null
#stty quit    "undef"       2> /dev/null
stty time    0             2> /dev/null
stty min     0             2> /dev/null
stty line    6             2> /dev/null
stty speed   4000000       &> /dev/null

autoload edit-command-line
zle -N edit-command-line

# XXX move/fix/make something of this
precmd() {
  #zle  beginning-of-line
  #printf "% $zle_eval_context\n"
  #printf "#### RBUF: $RBUFFER\n"
  #print -s " $PWD"
  #LAST_DIR=$PWD
}

prompt_japh_setup
#source $HOME/etc/zsh/prompt_japh_setup
zstyle ':vcs_info:*'              actionformats \
  " %s%F{ma}%F{ye}%F{ma}[%F{green}%b%F{ye}|%F{red}%a%F{[ma}]%f "
zstyle ':vcs_info:*'              formats       \
  " %s%F{ma}%F{ye}%F{240}⸢%F{148}%b%F{240}｣%f"
zstyle ':vcs_info:cvs:*'          formats       \
  " %s%F{ma}%F{ye}-%F{ma}[%F{green}%r%F{ma}]%f"
zstyle ':vcs_info:(sv[nk]|bzr):*' branchformat \
  "%b%F{red}:%F{ye}%r"

#zstyle ':vcs_info:*'     actionformats " %F{ma}(%f%s%F{ma})%F{ye}-%F{ma}[%F{green}%b%F{ye}|%F{red}%a%F{[ma}]%f-"
#zstyle ':vcs_info:*'     formats       " %F{ma}(%f%s%F{ma})%F{ye}-%F{ma}[%F{green}%b%F{ma}]%f-"
#zstyle ':vcs_info:cvs:*' formats       " %F{ma}(%f%s%F{ma})%F{ye}-%F{ma}[%F{green}%r%F{ma}]%f-"
#zstyle ':vcs_info:(sv[nk]|bzr):*' branchformat "%b%F{red}:%F{ye}%r"


#printf "\e]12;%s\a" "#ffffff"
#PS1='  '
eval $(dircolors -b $HOME/dev/LS_COLORS/LS_COLORS)
#export PATH=${PATH}:/usr/bin/site_perl
#alias ls=ls++
#alias ..="builtin cd .."
#alias ...="builtin cd ../ && pwd"
#alias ....="builtin cd ../.."
#alias rm="/bin/rm -v"
#alias cp="/bin/cp -v"
#alias mv="/bin/mv -v"
#alias prename="prename -v"

#eval $( dircolors -b ${HOME}/dev/LS_COLORS/LS_COLORS )

compdef     _gnu_generic ln file vnstati lscpu lsb_release

PATH="$HOME/perl5/bin${PATH:+:${PATH}}"; export PATH;
#PERL5LIB="$HOME/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
#PERL_LOCAL_LIB_ROOT="$HOME/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"$HOME/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=$HOME/perl5"; export PERL_MM_OPT;





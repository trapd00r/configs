# vim:ft=gitconfig:
[include]
  path = ~/etc/delta/neverland.theme
[user]
  name  = Magnus Woldrich
  email = magnus.woldrich@gmail.com
[core]
  pager = delta
[merge]
  conflictstyle = diff3
[color]
  branch     = auto
  diff       = 1
  grep       = auto
  pager      = 0
  showbranch = auto
  status     = auto
  ui         = auto

[color "status"]
  added     = 166 bold
  branch    = 100
  changed   = 178 bold
  header    = 086
  nobranch  = 197
  untracked = 240

[color "branch"]
  current = 172
  local   = 85 bold
  remote  = 039
  plain   = 240 reverse

[color "diff"]
  old        = 124
  new        = 34 bold
  plain      = 137
  meta       = 85
  frag       = 86
  func       = 87
  commit     = 4
  whitespace = 160 bold

[diff]
  colorMoved = default

[interactive]
  diffFilter = delta --color-only --line-number

[delta]
  navigate = true    # use n and N to move between diff sections
  light = false      # set to true if you're in a terminal w/ a light background color (e.g. the default macOS terminal)
  line-numbers = true
  features = decorations
  side-by-side = false
#  syntax-theme = "Monokai Extended"
#  features = unobtrusive-line-numbers decorations
  whitespace-error-style = 22 reverse
#  line-numbers-left-format = ""
#  line-numbers-right-format = "│ "
#  minus-style = "#ff0000"
#  plus-style = black "#005f00"

[delta]

[delta "unobtrusive-line-numbers"]
#  line-numbers = true
#  line-numbers-minus-style = "#444444"
#  line-numbers-zero-style = "#444444"
#  line-numbers-plus-style = "#444444"
#  line-numbers-left-format = "{nm:>4}┊"
#  line-numbers-right-format = "{np:>4}│"
#  line-numbers-left-style = blue
#  line-numbers-right-style = blue

[delta "interactive"]
  keep-plus-minus-markers = false

[delta "decorations"]
#  commit-decoration-style = bold yellow box ul
#  file-style = bold yellow ul
#  file-decoration-style = none
#  hunk-header-decoration-style = yellow box
  commit-decoration-style = blue ol
  commit-style = raw
  file-style = omit
  hunk-header-decoration-style = blue box
  hunk-header-file-style = red
  hunk-header-line-number-style = "#067a00"
  hunk-header-style = file line-number syntax

[merge]
  conflictstyle = diff3
	autostash = true

[diff]
  colorMoved = default

[man]
#  viewer = motherfuckingvimpager
[receive]
  denyCurrentBranch = ignore
[core]
  excludesfile = ~/etc/gitignore.global
[gui]
  fontui   = -family MonteCarlo -size -12 -weight normal -slant roman -underline 0 -overstrike 0
  fontdiff = -family MonteCarlo -size -12 -weight normal -slant roman -underline 0 -overstrike 0
[alias]
  last = "!git log -10 HEAD --abbrev-commit --date=short --pretty=format:'%h%x00%cd%x00%s%x00%an%x00%d' $@ | gawk -F '\\0' '{ printf \"\\033[31m%s\\033[m \\033[32m%s\\033[m  %-.40s \\033[30;1m%s\\033[m\\033[33m%s\\n\", $1, $2, gensub(/(.{49}).{2,}/, \"\\\\1…\",\"g\",$3), $4, $5 }';"
  lastt = "!git log -76 HEAD --abbrev-commit --date=short --pretty=format:'%h%x00%cd%x00%s%x00%an%x00%d' $@ | gawk -F '\\0' '{ printf \"\\033[31m%s\\033[m \\033[32m%s\\033[m  %-.40s \\033[30;1m%s\\033[m\\033[33m%s\\n\", $1, $2, gensub(/(.{49}).{2,}/, \"\\\\1…\",\"g\",$3), $4, $5 }';"
  co   = checkout
  ci   = commit
  st   = status
  pu   = push
  pl   = pull
  undo = checkout --
  log1 = log --
  whatthefuckdidido = diff HEAD
  sum  = git-summary
  effort  = git-summary
  styoyo = git-awesome-status
  l    = "!f () { git log --abbrev-commit --date=short --pretty=format:'%h%x00%cd%x00%s%x00%an%x00%d' $@ | gawk -F '\\0' '{ printf \"\\033[31m%s\\033[0m \\033[32m%s\\033[0m  %-40s \\033[30;1m%s\\033[0m\\033[33m%s\\n\", $1, $2, gensub(/(.{49}).{2,}/, \"\\\\1…\",\"g\",$3), $4, $5 }';}; f"
  ll   = "!f () { git log --abbrev-commit --date=short --pretty=format:'%h%x00%cd%x00%s%x00%an%x00%d' $@ | gawk -F '\\0' '{ printf \"\\033[31m%s\\033[0m \\033[32m%s\\033[0m  %-50s \\033[30;1m%s\\033[0m\\033[33m%s\\n\", $1, $2, gensub(/(.{49}).{2,}/, \"\\\\1…\",\"g\",$3), $4, $5 }';}; f"
  lll  = "!f () { git log --abbrev-commit --date=short --pretty=format:'%h%x00%cd%x00%s%x00%an%x00%d' $@ | gawk -F '\\0' '{ printf \"\\033[31m%s\\033[0m \\033[32m%s\\033[0m  %-80s \\033[30;1m%s\\033[0m\\033[33m%s\\n\", $1, $2, gensub(/(.{79}).{2,}/, \"\\\\1…\",\"g\",$3), $4, $5 }'; }; f"
  lg40 = "!f () { git log --graph --color=always --abbrev-commit --date=relative --pretty=format:'%x00%h%x00%s%x00%cd%x00%an%x00%d' $@ | gawk -F '\\0' '{ printf \"%s\\033[31m%s\\033[0m %-40s \\033[32m%14s\\033[0m \\033[30;1m%s\\033[0m\\033[33m%s\\n\", $1, $2, gensub(/(.{49}).{2,}/, \"\\\\1…\",\"g\",$3), $4, $5, $6 }'; }; f"
  lg50 = "!f () { git log --graph --color=always --abbrev-commit --date=relative --pretty=format:'%x00%h%x00%s%x00%cd%x00%an%x00%d' $@ | gawk -F '\\0' '{ printf \"%s\\033[31m%s\\033[0m %-50s \\033[32m%14s\\033[0m \\033[30;1m%s\\033[0m\\033[33m%s\\n\", $1, $2, gensub(/(.{49}).{2,}/, \"\\\\1…\",\"g\",$3), $4, $5, $6 }'; }; f"
  lg80 = "!f () { git log --graph --color=always --abbrev-commit --date=relative --pretty=format:'%x00%h%x00%s%x00%cd%x00%an%x00%d' $@ | gawk -F '\\0' '{ printf \"%s\\033[31m%s\\033[0m %-80s \\033[32m%14s\\033[0m \\033[30;1m%s\\033[0m\\033[33m%s\\n\", $1, $2, gensub(/(.{79}).{2,}/, \"\\\\1…\",\"g\",$3), $4, $5, $6 }'; }; f"
[github]
  user  = trapd00r
[init]
	defaultBranch = master
[guitool "Rebase onto..."]
    cmd = git rebase $REVISION
    revprompt = yes
[guitool "Rebase/Continue"]
    cmd = git rebase --continue
[guitool "Rebase/Skip"]
    cmd = git rebase --skip
[guitool "Rebase/Abort"]
    cmd = git rebase --abort
[guitool "Pull with Rebase"]
    cmd = git pull --rebase
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[rebase]
	autoStash = true
[pull]
	rebase = true
